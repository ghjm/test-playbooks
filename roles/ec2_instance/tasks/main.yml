---
- name: Verify that we have all the settings we need
  fail:
    msg: "{{ item }} must be defined"
  when: vars[item] is not defined
  loop:
    - "ssh_public_key"
    - "ssh_private_key"
    - "aws_region"
    - "aws_vpc_id"
    - "aws_key_name"
    - "aws_group_name"
    - "aws_instance_type"
    - "aws_ami"
    - "aws_ec2_instance_tags"

- name: Create EC2 key pair
  amazon.aws.ec2_key:
    region: "{{ aws_region }}"
    name: "{{ aws_key_name }}"
    key_material: "{{ lookup('file', ssh_public_key) }}"
    state: present

- name: Create EC2 security group
  amazon.aws.ec2_group:
    region: "{{ aws_region }}"
    name: "{{ aws_group_name }}"
    description: "testsite security group {{ aws_group_name }}"
    rules:
      - proto: tcp
        ports:
        - 80
        cidr_ip: 0.0.0.0/0
        rule_desc: http
      - proto: tcp
        ports:
        - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: ssh
    state: present
  register: ec2_group

- name: Create EC2 subnet
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ aws_vpc_id }}"
    cidr: "{{ aws_subnet_cidr }}"
  register: ec2_subnet

- name: Create EC2 instance
  amazon.aws.ec2:
    region: "{{ aws_region }}"
    key_name: "{{ aws_key_name }}"
    instance_type: "{{ aws_instance_type }}"
    image: "{{ aws_ami }}"
    group_id: "{{ ec2_group.group_id }}"
    vpc_subnet_id: "{{ ec2_subnet.subnet.id }}"
    assign_public_ip: yes
    instance_tags: "{{ aws_ec2_instance_tags }}"
    count_tag: "{{ aws_ec2_instance_tags }}"
    exact_count: 1
    wait: true
  register: ec2_instance

- name: Add instance to inventory
  add_host:
    name: "{{ item.public_dns_name }}"
    groups: "{{ add_host_group }}"
    ansible_user: "{{ ssh_username }}"
    ansible_ssh_private_key_file: "{{ ssh_private_key }}"
    ansible_become: true
  loop: "{{ ec2_instance.tagged_instances }}"
  changed_when: false